#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&macro0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        macro1: macro1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp N1 &kp N1 &kp N1 &kp N1>;
            label = "MACRO1";
        };

        macro2: macro2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp M &kp A &kp S &kp A &kp N1 &kp N9 &kp N8 &kp N0>;
            label = "MACRO2";
        };

        macro0: macro0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp M &kp A &kp S &kp A &kp N1 &kp N9 &kp N8 &kp N0 &kp N3>;
            label = "MACRO0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&macro0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E             &kp R                     &kp T                                                    &kp Y        &kp U  &lt 0 I    &kp O    &kp P
&kp A             &kp S         &kp D             &kp F                     &kp G        &kp LS(LG(S))           &kp MINUS           &kp H        &kp J  &kp K      &kp L    &kp SEMICOLON
&kp Z             &kp X         &kp C             &kp V                     &kp B        &kp COLON               &kp SEMICOLON       &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&mt LEFT_WIN F13  &kp LEFT_ALT  &kp LEFT_CONTROL  &mt LEFT_SHIFT BACKSPACE  &lt 1 SPACE  &lt_to_layer_0 3 TAB    &mt LEFT_WIN MINUS  &lt 2 ENTER                             &kp SINGLE_QUOTE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp ESC               &trans              &kp UP_ARROW      &trans               &kp LEFT_BRACKET                        &kp RIGHT_BRACKET      &kp LG(W)           &kp PAGE_UP    &kp LG(T)            &kp BACKSPACE
&trans                &kp LEFT_ARROW      &kp DOWN_ARROW    &kp RIGHT_ARROW      &kp LEFT_BRACE        &trans    &trans  &kp RIGHT_BRACE        &mkp LCLK           &kp PAGE_DOWN  &mkp RCLK            &trans
&kp LS(LG(NUMBER_4))  &kp LC(LEFT_ARROW)  &kp LC(UP_ARROW)  &kp LC(RIGHT_ARROW)  &kp LEFT_PARENTHESIS  &trans    &trans  &kp RIGHT_PARENTHESIS  &kp LG(LEFT_ARROW)  &trans         &kp LG(RIGHT_ARROW)  &trans
&kp F13               &trans              &trans            &trans               &trans                &trans    &trans  &trans                                                                         &kp LG(BACKSPACE)
            >;
        };

        NUM {
            bindings = <
&kp EXCLAMATION       &kp AT_SIGN  &kp HASH  &kp DOLLAR     &kp PERCENT                    &trans   &trans   &trans   &trans  &trans
&kp QUESTION          &trans       &trans    &kp AMPERSAND  &kp PIPE     &trans    &trans  &trans   &trans   &trans   &trans  &trans
&kp NON_US_BACKSLASH  &trans       &trans    &trans         &kp GRAVE    &trans    &trans  &macro0  &macro1  &macro2  &trans  &trans
&kp F13               &trans       &trans    &trans         &kp ENTER    &trans    &trans  &trans                             &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                     &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };
    };
};
